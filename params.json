{"name":"Jaspect","tagline":"Simple Aspects for JavaScript","body":"# Getting Started with Aspects for JavaScript\r\nAn aspect of a program is a feature linked to many other parts of the program, but which is not related to the program's primary function.\r\nJaspect let's you write these aspects separately and then add them in at the last minute.\r\n\r\n## The canonical logging example\r\n\r\nThis some code that you might write:\r\n\r\n```\r\n// in myStuff.js\r\n\r\nvar myMult = function(x, y, z){\r\n    return x * y * z;\r\n}\r\n\r\nmyMult(myMult(2,3,4),2,3);\r\n```\r\n\r\nTo log before every call to myMult:\r\n\r\n```\r\n// in loggingAspect.js\r\n\r\nmodule.exports = function(jaspect){\r\n\r\n  var context = {};\r\n  var multPointCut = {type:\"call\", name:\"myMult\"};\r\n  \r\n  jaspect.before(multPointCut, context, function(joinPoint){\r\n        \r\n        console.log(\"DEBUG \" + joinPoint.name + joinPoint.args);\r\n        \r\n  });\r\n}\r\n```\r\n\r\nFinally to apply the aspect to your code:\r\n\r\n```\r\njaspect -j loggingAspect.js myStuff.js\r\n```\r\n\r\nWhen the resulting file is run we get the following output:\r\n\r\n```\r\nDEBUG myMult 2,3,4\r\nDEBUG myMult myMult(2,3,4), 2, 3\r\n\r\n```\r\n\r\n\r\n## Installation\r\n\r\n```\r\nnpm install -g jaspect\r\n```\r\n\r\n## Definitions\r\n\r\n#### Aspect\r\nAn aspect of a program is a feature linked to many other parts of the program, but which is not related to the program's primary function.\r\n\r\n#### Join Point\r\nA specific point in the control flow of your program.\r\n\r\n#### Cut Point\r\nA set of join points.\r\n\r\n#### Advice\r\nA piece of code to be executed on all join points in a cut point.\r\n\r\n# Documentation\r\n\r\n## Point Cuts\r\n\r\n## Advice\r\n\r\n## Usage\r\n\r\n## Limitations\r\n\r\n# Contributing\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}